Reproducible Research: Peer Assessment 1
Assignment


Loading and preprocessing the data
Unzip the folder and read in the data in the activity.csv file.


if (!file.exists('activity.csv')) {
  unzip(zipfile = "activity.zip")
}
activityData <- read.csv(file="activity.csv", header=TRUE)

activityData <- read.csv(file="activity.csv")
activityData$date <-as.Date(activityData$date, format="%Y-%m-%d")


Mean total number of steps taken per day?
# Total steps taken per day
totalSteps <- aggregate(steps ~ date, activityData, FUN=sum)
AggregatedData<-aggregate(activityData$steps, list(activityData$date), sum, na.rm=TRUE)
colnames(AggregatedData) <- c("date", "steps")

# Histogram of the total number of steps taken per day 
hist(totalSteps$steps,
     main = "Total Steps per Day",
     xlab = "Number of Steps")
hist(AggregatedData$steps,breaks=10, main="Histogram of total steps per day", xlab="Total steps per day", ylab="Frequency")



# Calculate and report the mean and median of total steps taken per day
meanSteps <- mean(totalSteps$steps, na.rm = TRUE)
medSteps <- median(totalSteps$steps, na.rm = TRUE)

mean_per_day<-mean(AggregatedData$steps, na.rm=TRUE)
Mean Number of Steps Taken per Day = 1.076618910^{4}

median_per_day<-median(AggregatedData$steps, na.rm=TRUE)
Median Number of Steps Taken per Day = 10765

Average daily activity pattern:
# Make a time-series plot of the 5-minute interval and the average number of
# steps taken, averaged acoss all days.
library(ggplot2)
meanStepsByInt <- aggregate(steps ~ interval, activityData, mean)
ggplot(data = meanStepsByInt, aes(x = interval, y = steps)) +
  geom_line() +
  ggtitle("Average Daily Activity Pattern") +
  xlab("5-minute Interval") +
  ylab("Average Number of Steps") +
  theme(plot.title = element_text(hjust = 0.5))

timeseries_steps<-aggregate(activityData$steps, list(activityData$interval), mean, na.rm=TRUE)
colnames(timeseries_steps) <- c("interval", "steps")
plot(timeseries_steps$interval,timeseries_steps$steps, type="l", xlab="5-minute Interval", ylab="Mean of steps")


# Which 5-minute interval across all days contain the maximum number of steps
maxInt <- meanStepsByInt[which.max(meanStepsByInt$steps),]

Imputing Missing Values
# Calculate and report the total number of missing values in the dataset
missingVals <- is.na(activityData$steps)
# There are 17568 missing values. replace these with the 5-day average of that respective interval.
sum(is.na(activityData$steps) == TRUE)

# Create a new dataset that is equal to the original dataset but with 
# the missing data filled in.
imp_activityData <- transform(activityData,
                              steps = ifelse(is.na(activityData$steps),
                                             meanStepsByInt$steps[match(activityData$interval, 
                                                                        meanStepsByInt$interval)],
                                             activityData$steps))

# Make a histogram of the total number of steps taken each day and
# and report the mean and median.
impStepsByInt <- aggregate(steps ~ date, imp_activityData, FUN=sum)
hist(impStepsByInt$steps,
     main = "Imputed Number of Steps Per Day",
     xlab = "Number of Steps")

impMeanSteps <- mean(impStepsByInt$steps, na.rm = TRUE)
impMedSteps <- median(impStepsByInt$steps, na.rm = TRUE)
diffMean = impMeanSteps - meanSteps
diffMed = impMedSteps - medSteps
diffTotal = sum(impStepsByInt$steps) - sum(totalSteps$steps)
There is a difference of 0 in the mean steps of the two dataset. There is a difference of -1.076381110^{4} in the median steps of the two dataset. 
There is a difference of 8.612950910^{4} in the total steps of the two dataset.


Differences in activity patterns between weekdays and weekends;
# Create a new factor variable in the dataset with two levels - "weekend" and "weekday"
DayType <- function(date) {
  day <- weekdays(date)
  if (day %in% c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'))
      return ("weekeday")
  else if (day %in% c('Saturday', 'Sunday'))
      return ("weekend")
  else
      stop ("Invalid Date Format.")
}
imp_activityData$date <- as.Date(imp_activityData$date)
imp_activityData$day <- sapply(imp_activityData$date, FUN = DayType)

# Make a panel plot containnig a time-series plot of the 5-minute interval
# and the average number of steps taken across all weekdays or weekends
meanStepsByDay <- aggregate(steps ~ interval + day, imp_activityData, mean)
ggplot(data = meanStepsByDay, aes(x = interval, y = steps)) + 
  geom_line() +
  facet_grid(day ~ .) +
  ggtitle("Average Daily Activity Pattern") +
  xlab("5-minute Interval") +
  ylab("Average Number of Steps") +
  theme(plot.title = element_text(hjust = 0.5))
